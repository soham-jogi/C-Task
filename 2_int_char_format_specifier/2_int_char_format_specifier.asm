; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG2591	DB	'chChar1 = %d ', 0aH, 00H
	ORG $+1
$SG2592	DB	'chChar1 = %c ', 0aH, 00H
	ORG $+1
$SG2593	DB	'chChar2 = %d ', 0aH, 00H
	ORG $+1
$SG2594	DB	'chChar2 = %c ', 0aH, 00H
	ORG $+1
$SG2595	DB	'iNo1 = %d', 0aH, 00H
	ORG $+5
$SG2596	DB	'iNo1 = %c', 0aH, 00H
	ORG $+5
$SG2597	DB	'iNo2 = %d', 0aH, 00H
	ORG $+5
$SG2598	DB	'iNo2 = %c', 0aH, 00H
	ORG $+5
$SG2599	DB	'chChar3 = %c & chChar3 = %d', 0aH, 00H
	ORG $+3
$SG2600	DB	'chChar4 = %c & chChar4 = %d', 0aH, 00H
	ORG $+3
$SG2601	DB	'chAns = %c & chAns = %d', 0aH, 00H
_DATA	ENDS
PUBLIC	main
EXTRN	printf:PROC
pdata	SEGMENT
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+284
	DD	imagerel $unwind$main
pdata	ENDS
xdata	SEGMENT
$unwind$main DD	010401H
	DD	08204H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
chChar2$ = 32
iNo2$ = 36
chChar3$ = 40
iNo1$ = 44
chAns$ = 48
chChar4$ = 49
chChar1$ = 50
main	PROC
; File d:\soham\c\c_batch\2_int_char_format_specifier\2_int_char_format_specifier.c
; Line 4
$LN3:
	sub	rsp, 72					; 00000048H
; Line 5
	mov	BYTE PTR chChar1$[rsp], 65		; 00000041H
; Line 6
	mov	BYTE PTR chChar2$[rsp], 65		; 00000041H
; Line 7
	mov	DWORD PTR iNo1$[rsp], 65		; 00000041H
; Line 8
	mov	DWORD PTR iNo2$[rsp], 65		; 00000041H
; Line 10
	mov	BYTE PTR chChar3$[rsp], 33		; 00000021H
; Line 11
	mov	BYTE PTR chChar4$[rsp], 34		; 00000022H
; Line 14
	movsx	eax, BYTE PTR chChar1$[rsp]
	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG2591
	call	printf
; Line 15
	movsx	eax, BYTE PTR chChar1$[rsp]
	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG2592
	call	printf
; Line 16
	movsx	eax, BYTE PTR chChar2$[rsp]
	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG2593
	call	printf
; Line 17
	movsx	eax, BYTE PTR chChar2$[rsp]
	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG2594
	call	printf
; Line 19
	mov	edx, DWORD PTR iNo1$[rsp]
	lea	rcx, OFFSET FLAT:$SG2595
	call	printf
; Line 20
	mov	edx, DWORD PTR iNo1$[rsp]
	lea	rcx, OFFSET FLAT:$SG2596
	call	printf
; Line 21
	mov	edx, DWORD PTR iNo2$[rsp]
	lea	rcx, OFFSET FLAT:$SG2597
	call	printf
; Line 22
	mov	edx, DWORD PTR iNo2$[rsp]
	lea	rcx, OFFSET FLAT:$SG2598
	call	printf
; Line 24
	movsx	eax, BYTE PTR chChar3$[rsp]
	movsx	ecx, BYTE PTR chChar4$[rsp]
	add	eax, ecx
	mov	BYTE PTR chAns$[rsp], al
; Line 26
	movsx	eax, BYTE PTR chChar3$[rsp]
	movsx	ecx, BYTE PTR chChar3$[rsp]
	mov	r8d, eax
	mov	edx, ecx
	lea	rcx, OFFSET FLAT:$SG2599
	call	printf
; Line 27
	movsx	eax, BYTE PTR chChar4$[rsp]
	movsx	ecx, BYTE PTR chChar4$[rsp]
	mov	r8d, eax
	mov	edx, ecx
	lea	rcx, OFFSET FLAT:$SG2600
	call	printf
; Line 28
	movsx	eax, BYTE PTR chAns$[rsp]
	movsx	ecx, BYTE PTR chAns$[rsp]
	mov	r8d, eax
	mov	edx, ecx
	lea	rcx, OFFSET FLAT:$SG2601
	call	printf
; Line 30
	xor	eax, eax
; Line 31
	add	rsp, 72					; 00000048H
	ret	0
main	ENDP
_TEXT	ENDS
END
